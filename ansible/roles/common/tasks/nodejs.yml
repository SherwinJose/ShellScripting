- name: Setup Repo file for NodeJS
  ansible.builtin.copy:
    src: nodejs.repo
    dest: /etc/yum.repos.d/nodejs.repo
## Coping the nodejs.repo files from roles folder to the remote system using ansible.bultin.copy module

- name: Install NodeJS
  ansible.builtin.yum:
    name:
      - nodejs
      - gcc-c++
    state: installed
## Installing nodeJS files in frontend machine using ansible module, here 2 packages are getting installed in a single take.

- name: Add Application User
  ansible.builtin.user:
    name: roboshop
    state: present
## User creating using the ansible module

- name: Download node from Git repo and Extract it
  ansible.builtin.unarchive:
    src: https://github.com/roboshop-devops-project/{{COMPONENT}}/archive/main.zip
    dest: /tmp
    remote_src: yes
## Where we are inporting the task from downloads

- name: Clean old app code
  ansible.builtin.file:
    path: /home/roboshop/{{COMPONENT}}
    state: absent
##Deleteing the old files from the path

- name: Copy App code
  ansible.builtin.copy:
    src: /tmp/{{COMPONENT}}-main/
    dest: /home/roboshop/{{COMPONENT}}/
    remote_src: yes
  become_user: roboshop
##Coping app code from /tmp to /home/roboshop using ansible module


- name: Install cart Dependencies
  community.general.npm:
    path: /home/roboshop/{{COMPONENT}}
  become_user: roboshop
#Perofrming npmrebult command with the help of ansible module

- name: Setup {{COMPONENT}} SystemD Config File
  ansible.builtin.copy:
    src: /tmp/{{COMPONENT}}-main/systemd.service
    dest: /etc/systemd/system/{{COMPONENT}}.service
    remote_src: yes

#coping the systemd.service  from template folder to systemd folder

- name: Start {{COMPONENT}} service
  ansible.builtin.systemd:
    name: "{{COMPONENT}}"
    state: restarted
    enabled: yes
    daemon_reload: yes

##Restarting the services
